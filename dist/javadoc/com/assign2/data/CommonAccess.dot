#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Courier New",fontsize=10,labelfontname="Courier New",labelfontsize=10];
	node [fontname="Courier New",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.assign2.data.OrderLineAccess
	c114 [label=<<table title="com.assign2.data.OrderLineAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrderLineAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> OrderLineAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + ORDER_ID : String </td></tr><tr><td align="left" balign="left"> + ITEM_ID : String </td></tr><tr><td align="left" balign="left"> + QUANTITY : String </td></tr><tr><td align="left" balign="left"> + TOTAL : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + OrderLineAccess() </td></tr><tr><td align="left" balign="left"> + addNewOrderLine(orderId : int, itemId : int, quantity : int, total : double) </td></tr><tr><td align="left" balign="left"> + deleteOrderLine(orderLineId : int) </td></tr><tr><td align="left" balign="left"> + findOrderLine(column : String, value : String) : OrderLine </td></tr><tr><td align="left" balign="left"> + updateOrderLine(orderLineId : int, column : String, newValue : String) </td></tr></table></td></tr></table>>, URL="./OrderLineAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.OrderAccess
	c115 [label=<<table title="com.assign2.data.OrderAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrderAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> OrderAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + ORDER_ID : String </td></tr><tr><td align="left" balign="left"> + CUSTOMER_ID : String </td></tr><tr><td align="left" balign="left"> + ORDER_DATE : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + OrderAccess() </td></tr><tr><td align="left" balign="left"> + addNewOrder(orderId : int, customerId : int, date : Date) </td></tr><tr><td align="left" balign="left"> + deleteOrder(orderId : int) </td></tr><tr><td align="left" balign="left"> + findOrder(column : String, value : String) </td></tr><tr><td align="left" balign="left"> + updateOrder(orderId : int, column : String, newValue : String) </td></tr></table></td></tr></table>>, URL="./OrderAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.ItemAccess
	c116 [label=<<table title="com.assign2.data.ItemAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ItemAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> ItemAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + ITEM_ID : String </td></tr><tr><td align="left" balign="left"> + NAME : String </td></tr><tr><td align="left" balign="left"> + CATEGORY : String </td></tr><tr><td align="left" balign="left"> + PRICE : String </td></tr><tr><td align="left" balign="left"> + DESCRIPTION : String </td></tr><tr><td align="left" balign="left"> + IMAGE : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + ItemAccess() </td></tr><tr><td align="left" balign="left"> + findItem(column : String, value : String) : Item </td></tr><tr><td align="left" balign="left"> + addNewItem(itemId : int, name : String, category : Category, price : double, description : String, image : Image, qtyInStock : int) </td></tr><tr><td align="left" balign="left"> + deleteItem(itemId : int) </td></tr><tr><td align="left" balign="left"> + updateItem(itemId : int, column : String, value : String) </td></tr></table></td></tr></table>>, URL="./ItemAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.CustomerAccess
	c117 [label=<<table title="com.assign2.data.CustomerAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CustomerAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> CustomerAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + CUSTOMER_ID : String </td></tr><tr><td align="left" balign="left"> + FIRST_NAME : String </td></tr><tr><td align="left" balign="left"> + LAST_NAME : String </td></tr><tr><td align="left" balign="left"> + ADDRESS : String </td></tr><tr><td align="left" balign="left"> + PHONE_NUMBER : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> - CustomerAccess() </td></tr><tr><td align="left" balign="left"> + findCustomer(column : String, value : String) : Customer </td></tr><tr><td align="left" balign="left"> + addNewCustomer(firstName : String, lastName : String, address : String, phoneNumber : String) </td></tr><tr><td align="left" balign="left"> + deleteCustomer(customerId : int) </td></tr><tr><td align="left" balign="left"> + updateCustomer(customerId : int, column : String, newValue : String) </td></tr></table></td></tr></table>>, URL="./CustomerAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.CommonAccess
	c118 [label=<<table title="com.assign2.data.CommonAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./CommonAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> CommonAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> ~ connection : Connection </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + CommonAccess() </td></tr><tr><td align="left" balign="left"> - _dbConnect() </td></tr><tr><td align="left" balign="left"> + dbConnect() : Connection </td></tr></table></td></tr></table>>, URL="./CommonAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.CategoryAccess
	c119 [label=<<table title="com.assign2.data.CategoryAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CategoryAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> CategoryAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + CATEGORY_ID : String </td></tr><tr><td align="left" balign="left"> + CATEGORY_NAME : String </td></tr><tr><td align="left" balign="left"> + PARENT_CATEGORY_ID : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + CategoryAccess() </td></tr><tr><td align="left" balign="left"> + addNewCategory(categoryId : int, categoryName : String, parentCategory : Category) </td></tr><tr><td align="left" balign="left"> + deleteCategory(categoryId : int) </td></tr><tr><td align="left" balign="left"> + findCategory(column : String, value : String) : Category </td></tr><tr><td align="left" balign="left"> + updateCategory(categoryId : int, column : String, newValue : String) </td></tr></table></td></tr></table>>, URL="./CategoryAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	//com.assign2.data.OrderLineAccess extends com.assign2.data.CommonAccess
	c118:p -> c114:p [dir=back,arrowtail=empty];
	//com.assign2.data.OrderAccess extends com.assign2.data.CommonAccess
	c118:p -> c115:p [dir=back,arrowtail=empty];
	//com.assign2.data.ItemAccess extends com.assign2.data.CommonAccess
	c118:p -> c116:p [dir=back,arrowtail=empty];
	//com.assign2.data.CustomerAccess extends com.assign2.data.CommonAccess
	c118:p -> c117:p [dir=back,arrowtail=empty];
	//com.assign2.data.CategoryAccess extends com.assign2.data.CommonAccess
	c118:p -> c119:p [dir=back,arrowtail=empty];
	// com.assign2.data.CommonAccess DEPEND java.sql.Connection
	c118:p -> c126:p [taillabel="", label="", headlabel="", fontname="Courier New", fontcolor="black", fontsize=12.0, color="black", arrowhead=open, style=dashed];
	// java.sql.Connection
	c126 [label=<<table title="java.sql.Connection" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Connection.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"> &#171;interface&#187; </td></tr><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> java.sql.Connection </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + TRANSACTION_NONE : int </td></tr><tr><td align="left" balign="left"> + TRANSACTION_READ_UNCOMMITTED : int </td></tr><tr><td align="left" balign="left"> + TRANSACTION_READ_COMMITTED : int </td></tr><tr><td align="left" balign="left"> + TRANSACTION_REPEATABLE_READ : int </td></tr><tr><td align="left" balign="left"> + TRANSACTION_SERIALIZABLE : int </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + createStatement() : java.sql.Statement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + prepareCall(arg0 : java.lang.String) : java.sql.CallableStatement </td></tr><tr><td align="left" balign="left"> + nativeSQL(arg0 : java.lang.String) : java.lang.String </td></tr><tr><td align="left" balign="left"> + setAutoCommit(arg0 : boolean) </td></tr><tr><td align="left" balign="left"> + getAutoCommit() : boolean </td></tr><tr><td align="left" balign="left"> + commit() </td></tr><tr><td align="left" balign="left"> + rollback() </td></tr><tr><td align="left" balign="left"> + close() </td></tr><tr><td align="left" balign="left"> + isClosed() : boolean </td></tr><tr><td align="left" balign="left"> + getMetaData() : java.sql.DatabaseMetaData </td></tr><tr><td align="left" balign="left"> + setReadOnly(arg0 : boolean) </td></tr><tr><td align="left" balign="left"> + isReadOnly() : boolean </td></tr><tr><td align="left" balign="left"> + setCatalog(arg0 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + getCatalog() : java.lang.String </td></tr><tr><td align="left" balign="left"> + setTransactionIsolation(arg0 : int) </td></tr><tr><td align="left" balign="left"> + getTransactionIsolation() : int </td></tr><tr><td align="left" balign="left"> + getWarnings() : java.sql.SQLWarning </td></tr><tr><td align="left" balign="left"> + clearWarnings() </td></tr><tr><td align="left" balign="left"> + createStatement(arg0 : int, arg1 : int) : java.sql.Statement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String, arg1 : int, arg2 : int) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + prepareCall(arg0 : java.lang.String, arg1 : int, arg2 : int) : java.sql.CallableStatement </td></tr><tr><td align="left" balign="left"> + getTypeMap() : java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt; </td></tr><tr><td align="left" balign="left"> + setTypeMap(arg0 : java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;) </td></tr><tr><td align="left" balign="left"> + setHoldability(arg0 : int) </td></tr><tr><td align="left" balign="left"> + getHoldability() : int </td></tr><tr><td align="left" balign="left"> + setSavepoint() : java.sql.Savepoint </td></tr><tr><td align="left" balign="left"> + setSavepoint(arg0 : java.lang.String) : java.sql.Savepoint </td></tr><tr><td align="left" balign="left"> + rollback(arg0 : java.sql.Savepoint) </td></tr><tr><td align="left" balign="left"> + releaseSavepoint(arg0 : java.sql.Savepoint) </td></tr><tr><td align="left" balign="left"> + createStatement(arg0 : int, arg1 : int, arg2 : int) : java.sql.Statement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String, arg1 : int, arg2 : int, arg3 : int) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + prepareCall(arg0 : java.lang.String, arg1 : int, arg2 : int, arg3 : int) : java.sql.CallableStatement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String, arg1 : int) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String, arg1 : int[]) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + prepareStatement(arg0 : java.lang.String, arg1 : java.lang.String[]) : java.sql.PreparedStatement </td></tr><tr><td align="left" balign="left"> + createClob() : java.sql.Clob </td></tr><tr><td align="left" balign="left"> + createBlob() : java.sql.Blob </td></tr><tr><td align="left" balign="left"> + createNClob() : java.sql.NClob </td></tr><tr><td align="left" balign="left"> + createSQLXML() : java.sql.SQLXML </td></tr><tr><td align="left" balign="left"> + isValid(arg0 : int) : boolean </td></tr><tr><td align="left" balign="left"> + setClientInfo(arg0 : java.lang.String, arg1 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + setClientInfo(arg0 : java.util.Properties) </td></tr><tr><td align="left" balign="left"> + getClientInfo(arg0 : java.lang.String) : java.lang.String </td></tr><tr><td align="left" balign="left"> + getClientInfo() : java.util.Properties </td></tr><tr><td align="left" balign="left"> + createArrayOf(arg0 : java.lang.String, arg1 : java.lang.Object[]) : java.sql.Array </td></tr><tr><td align="left" balign="left"> + createStruct(arg0 : java.lang.String, arg1 : java.lang.Object[]) : java.sql.Struct </td></tr><tr><td align="left" balign="left"> + setSchema(arg0 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + getSchema() : java.lang.String </td></tr><tr><td align="left" balign="left"> + abort(arg0 : java.util.concurrent.Executor) </td></tr><tr><td align="left" balign="left"> + setNetworkTimeout(arg0 : java.util.concurrent.Executor, arg1 : int) </td></tr><tr><td align="left" balign="left"> + getNetworkTimeout() : int </td></tr></table></td></tr></table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Connection.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
}

