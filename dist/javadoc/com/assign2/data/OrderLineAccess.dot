#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Courier New",fontsize=10,labelfontname="Courier New",labelfontsize=10];
	node [fontname="Courier New",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.assign2.business.OrderLine
	c265 [label=<<table title="com.assign2.business.OrderLine" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../business/OrderLine.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> com.assign2.business.OrderLine </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> - orderId : int </td></tr><tr><td align="left" balign="left"> - itemId : int </td></tr><tr><td align="left" balign="left"> - quantity : int </td></tr><tr><td align="left" balign="left"> - total : double </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + OrderLine(oId : int, iID : int, qty : int, _total : double) </td></tr><tr><td align="left" balign="left"> + getOrderId() : int </td></tr><tr><td align="left" balign="left"> + setOrderId(orderId : int) </td></tr><tr><td align="left" balign="left"> + getItemId() : int </td></tr><tr><td align="left" balign="left"> + setItemId(itemId : int) </td></tr><tr><td align="left" balign="left"> + getQuantity() : int </td></tr><tr><td align="left" balign="left"> + setQuantity(quantity : int) </td></tr><tr><td align="left" balign="left"> + getTotal() : double </td></tr><tr><td align="left" balign="left"> + setTotal(total : double) </td></tr></table></td></tr></table>>, URL="../business/OrderLine.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.OrderLineAccess
	c271 [label=<<table title="com.assign2.data.OrderLineAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./OrderLineAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> OrderLineAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + ORDER_ID : String </td></tr><tr><td align="left" balign="left"> + ITEM_ID : String </td></tr><tr><td align="left" balign="left"> + QUANTITY : String </td></tr><tr><td align="left" balign="left"> + TOTAL : String </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + OrderLineAccess() </td></tr><tr><td align="left" balign="left"> + addNewOrderLine(orderId : int, itemId : int, quantity : int, total : double) </td></tr><tr><td align="left" balign="left"> + deleteOrderLine(orderLineId : int) </td></tr><tr><td align="left" balign="left"> + findOrderLine(column : String, value : String) : OrderLine </td></tr><tr><td align="left" balign="left"> + updateOrderLine(orderLineId : int, column : String, newValue : String) </td></tr></table></td></tr></table>>, URL="./OrderLineAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	// com.assign2.data.CommonAccess
	c275 [label=<<table title="com.assign2.data.CommonAccess" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CommonAccess.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> CommonAccess </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> ~ connection : Connection </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + CommonAccess() </td></tr><tr><td align="left" balign="left"> - _dbConnect() </td></tr><tr><td align="left" balign="left"> + dbConnect() : Connection </td></tr></table></td></tr></table>>, URL="./CommonAccess.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
	//com.assign2.data.OrderLineAccess extends com.assign2.data.CommonAccess
	c275:p -> c271:p [dir=back,arrowtail=empty];
	// com.assign2.data.OrderLineAccess DEPEND java.lang.String
	c271:p -> c277:p [taillabel="", label="", headlabel="", fontname="Courier New", fontcolor="black", fontsize=12.0, color="black", arrowhead=open, style=dashed];
	// com.assign2.data.OrderLineAccess DEPEND com.assign2.business.OrderLine
	c271:p -> c265:p [taillabel="", label="", headlabel="", fontname="Courier New", fontcolor="black", fontsize=12.0, color="black", arrowhead=open, style=dashed];
	// java.lang.String
	c277 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html"><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="center" balign="center"><font face="Courier New" point-size="12.0"> java.lang.String </font></td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> - value : char[] </td></tr><tr><td align="left" balign="left"> - offset : int </td></tr><tr><td align="left" balign="left"> - count : int </td></tr><tr><td align="left" balign="left"> - hash : int </td></tr><tr><td align="left" balign="left"> - serialVersionUID : long </td></tr><tr><td align="left" balign="left"> - serialPersistentFields : java.io.ObjectStreamField[] </td></tr><tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : java.util.Comparator&lt;java.lang.String&gt; </td></tr></table></td></tr><tr><td><table border="0" cellspacing="0" cellpadding="1"><tr><td align="left" balign="left"> + String() </td></tr><tr><td align="left" balign="left"> + String(arg0 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr><tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr><tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : java.nio.charset.Charset) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : java.lang.String) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : java.nio.charset.Charset) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr><tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr><tr><td align="left" balign="left"> + String(arg0 : java.lang.StringBuffer) </td></tr><tr><td align="left" balign="left"> + String(arg0 : java.lang.StringBuilder) </td></tr><tr><td align="left" balign="left"> ~ String(arg0 : int, arg1 : int, arg2 : char[]) </td></tr><tr><td align="left" balign="left"> - checkBounds(arg0 : byte[], arg1 : int, arg2 : int) </td></tr><tr><td align="left" balign="left"> + length() : int </td></tr><tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr><tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr><tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr><tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr><tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> ~ getChars(arg0 : char[], arg1 : int) </td></tr><tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr><tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr><tr><td align="left" balign="left"> + getBytes(arg0 : java.lang.String) : byte[] </td></tr><tr><td align="left" balign="left"> + getBytes(arg0 : java.nio.charset.Charset) : byte[] </td></tr><tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr><tr><td align="left" balign="left"> + equals(arg0 : java.lang.Object) : boolean </td></tr><tr><td align="left" balign="left"> + contentEquals(arg0 : java.lang.StringBuffer) : boolean </td></tr><tr><td align="left" balign="left"> + contentEquals(arg0 : java.lang.CharSequence) : boolean </td></tr><tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : java.lang.String) : boolean </td></tr><tr><td align="left" balign="left"> + compareTo(arg0 : java.lang.String) : int </td></tr><tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : java.lang.String) : int </td></tr><tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : java.lang.String, arg2 : int, arg3 : int) : boolean </td></tr><tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : java.lang.String, arg3 : int, arg4 : int) : boolean </td></tr><tr><td align="left" balign="left"> + startsWith(arg0 : java.lang.String, arg1 : int) : boolean </td></tr><tr><td align="left" balign="left"> + startsWith(arg0 : java.lang.String) : boolean </td></tr><tr><td align="left" balign="left"> + endsWith(arg0 : java.lang.String) : boolean </td></tr><tr><td align="left" balign="left"> + hashCode() : int </td></tr><tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr><tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> - indexOfSupplementary(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr><tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> - lastIndexOfSupplementary(arg0 : int, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> + indexOf(arg0 : java.lang.String) : int </td></tr><tr><td align="left" balign="left"> + indexOf(arg0 : java.lang.String, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> ~ indexOf(arg0 : char[], arg1 : int, arg2 : int, arg3 : char[], arg4 : int, arg5 : int, arg6 : int) : int </td></tr><tr><td align="left" balign="left"> + lastIndexOf(arg0 : java.lang.String) : int </td></tr><tr><td align="left" balign="left"> + lastIndexOf(arg0 : java.lang.String, arg1 : int) : int </td></tr><tr><td align="left" balign="left"> ~ lastIndexOf(arg0 : char[], arg1 : int, arg2 : int, arg3 : char[], arg4 : int, arg5 : int, arg6 : int) : int </td></tr><tr><td align="left" balign="left"> + substring(arg0 : int) : java.lang.String </td></tr><tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : java.lang.String </td></tr><tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : java.lang.CharSequence </td></tr><tr><td align="left" balign="left"> + concat(arg0 : java.lang.String) : java.lang.String </td></tr><tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : java.lang.String </td></tr><tr><td align="left" balign="left"> + matches(arg0 : java.lang.String) : boolean </td></tr><tr><td align="left" balign="left"> + contains(arg0 : java.lang.CharSequence) : boolean </td></tr><tr><td align="left" balign="left"> + replaceFirst(arg0 : java.lang.String, arg1 : java.lang.String) : java.lang.String </td></tr><tr><td align="left" balign="left"> + replaceAll(arg0 : java.lang.String, arg1 : java.lang.String) : java.lang.String </td></tr><tr><td align="left" balign="left"> + replace(arg0 : java.lang.CharSequence, arg1 : java.lang.CharSequence) : java.lang.String </td></tr><tr><td align="left" balign="left"> + split(arg0 : java.lang.String, arg1 : int) : java.lang.String[] </td></tr><tr><td align="left" balign="left"> + split(arg0 : java.lang.String) : java.lang.String[] </td></tr><tr><td align="left" balign="left"> + toLowerCase(arg0 : java.util.Locale) : java.lang.String </td></tr><tr><td align="left" balign="left"> + toLowerCase() : java.lang.String </td></tr><tr><td align="left" balign="left"> + toUpperCase(arg0 : java.util.Locale) : java.lang.String </td></tr><tr><td align="left" balign="left"> + toUpperCase() : java.lang.String </td></tr><tr><td align="left" balign="left"> + trim() : java.lang.String </td></tr><tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr><tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr><tr><td align="left" balign="left"> + format(arg0 : java.lang.String, arg1 : java.lang.Object[]) : java.lang.String </td></tr><tr><td align="left" balign="left"> + format(arg0 : java.util.Locale, arg1 : java.lang.String, arg2 : java.lang.Object[]) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : java.lang.Object) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : java.lang.String </td></tr><tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : java.lang.String </td></tr><tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : char) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : int) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : long) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : float) : java.lang.String </td></tr><tr><td align="left" balign="left"> + valueOf(arg0 : double) : java.lang.String </td></tr><tr><td align="left" balign="left"> + intern() : java.lang.String </td></tr></table></td></tr></table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html", fontname="Courier New", fontcolor="black", fontsize=12.0];
}

